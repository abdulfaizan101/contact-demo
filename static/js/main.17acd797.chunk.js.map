{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ContactList","lazy","SaveContact","App","useState","active","setActive","editIndex","setEditIndex","name","number","id","priority","contacts","setContacts","exact","path","fallback","delet","a","i","length","splice","contact","filter","item","pre","parseInt","discription","getEditIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGMA,EAAcC,gBAAK,kBAAM,sDACzBC,EAAcD,gBAAK,kBAAM,gCAwEhBE,MAvEf,WACE,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,CACvC,CACEK,KAAM,eACNC,OAAQ,gBACRC,GAAI,EACJC,SAAU,GAEZ,CACEH,KAAM,OACNC,OAAQ,gBACRC,GAAI,EACJN,QAAQ,EACRO,SAAU,GAEZ,CACEH,KAAM,WACNC,OAAQ,gBACRC,GAAI,EACJN,QAAQ,EACRO,SAAU,KAnBd,mBAAOC,EAAP,KAAiBC,EAAjB,KA0DA,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,WAAD,CAAUC,SAAU,6CAApB,SAA2C,cAACjB,EAAD,CAAaa,SAAUA,EAAUC,YAAaA,EAAaI,MA9BpH,SAACP,GAEb,IADA,IAAIQ,EAAC,YAAON,GACHO,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IACnC,GAAIP,EAASO,GAAGT,IAAMA,EAAI,CACxBQ,EAAEG,OAAOF,EAAG,GACZN,EAAY,YAAIK,IAChB,QAwB0Id,OAAQA,EAAQC,UAtC3I,SAACK,GAKpBL,EAJID,GAAUM,EAIJA,EAHE,IAoC2KH,aAAcA,QACjM,cAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,eAAlB,SAAiC,cAAC,WAAD,CAAUC,SAAU,6CAApB,SAA2C,cAACf,EAAD,CAAaY,YApB3E,SAACS,GACnB,GAAIA,EAAQZ,GAAZ,CACE,IAAIS,EAAIP,EAASW,QAAO,SAACC,GAAD,OAAUA,EAAKd,IAAMY,EAAQZ,MACrDG,EAAY,GAAD,mBAAKM,GAAL,gBAAaG,UAF1B,CAOA,IAFA,IAAIG,EAAMb,EAASQ,OAAS,EAAIM,SAASd,EAAUA,EAASQ,OAAS,GAAIT,UAAY,EAAI,EACrFD,EAAK,EACAS,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IAC/BP,EAASO,GAAGT,GAAKA,IACnBA,EAAKE,EAASO,GAAGT,IAGrBG,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAE,KAAQU,EAAQK,YAAa,OAAUL,EAAQd,KAAMG,SAAUc,EAAK,GAAMf,EAAK,QAOYkB,aAActB,cC1D1HuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17acd797.chunk.js","sourcesContent":["import React, { useState, Suspense, lazy } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nconst ContactList = lazy(() => import('./pages/contactList'));\nconst SaveContact = lazy(() => import('./pages/saveContact'));\nfunction App() {\n  const [active, setActive] = useState(0);\n  const [editIndex, setEditIndex] = useState(null);\n  const [contacts, setContacts] = useState([\n    {\n      name: 'Abdul Faizan',\n      number: '+923242403403',\n      id: 1,\n      priority: 1\n    },\n    {\n      name: 'Abid',\n      number: '+923242403402',\n      id: 2,\n      active: false,\n      priority: 2\n    },\n    {\n      name: 'Abdullah',\n      number: '+923242403405',\n      id: 3,\n      active: false,\n      priority: 3\n    }\n  ]);\n\n  const setActivefun = (id) => {\n    if (active == id) {\n      setActive(0);\n      return;\n    }\n    setActive(id);\n  }\n\n  const delet = (id) => {\n    let a = [...contacts]\n    for (var i = 0; i < contacts.length; i++) {\n      if (contacts[i].id == id) {\n        a.splice(i, 1)\n        setContacts([...a]);\n        break;\n      }\n    }\n\n  }\n  const saveContact = (contact) => {\n    if (contact.id) {\n      let i = contacts.filter((item) => item.id != contact.id);\n      setContacts([...i, { ...contact }])\n      return\n    }\n    let pre = contacts.length > 0 ? parseInt(contacts[(contacts.length - 1)].priority) + 1 : 1;\n    let id = 0;\n    for (let i = 0; i < contacts.length; i++) {\n      if (contacts[i].id > id) {\n        id = contacts[i].id;\n      }\n    }\n    setContacts([...contacts, { 'name': contact.discription, 'number': contact.name, priority: pre, 'id': id + 1 }])\n  }\n\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\"><Suspense fallback={<div>Loading...</div>}><ContactList contacts={contacts} setContacts={setContacts} delet={delet} active={active} setActive={setActivefun} setEditIndex={setEditIndex} ></ContactList></Suspense></Route>\n        <Route exact path=\"/saveContact\"><Suspense fallback={<div>Loading...</div>}><SaveContact setContacts={saveContact} getEditIndex={editIndex} ></SaveContact></Suspense></Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}